 /* REXX */
 /* crude tests, used to create the ppt */
 call on failure name err1
 /*REG_EX  ="(Mr\.\s(John|Alfred)\s(?:Sr\.|Jr\.))"
 REG_EX  ="(?<paren1>Mr\.\s(?<paren2>John|Alfred)\s(?:Sr\.|Jr\.))"
 */
 REG_EX  ="(?<paren1>Mr\.\s(?<paren2>John|Alfred)\s"
 REG_EX = REG_EX || "(?<paren3>Sr\.|Jr\.)?)"

 /*THE_STR1 = "Alfred went to visit Mr. John Jr. and Mr. Alfred sr."
 */
 THE_STR1 = "Alfred went to visit Mr. John Jr. and Mr. Alfred III"
 say "now the third parentheses are capturing but optional"
 MY_STEM = "WANG"
 OPT_ION = "gi"
 say   REG_EX
 say   THE_STR1
 say   OPT_ION

 /*re_sponse = REXXPCRE(reg_ex,the_str1,my_stem,opt_ion,,'debug')*/
   re_sponse = REXXPCRE(reg_ex,the_str1,my_stem,opt_ion)
 SAY WANG.0
 do  i = 1 to wang.0
   say
   say i
   SAY WANG_string.i
   SAY WANG_pos.i
   SAY WANG_name.i
 end

 exit
 err1:
    say 'failure at ' sigl
    say condition()
    say condition('D')
    return
