/* this rexx exec is expected to be invoked by the EXEC command
   thus:

   EXec 'dsname($INSTALL)'

   Prompting will occur for hlq and optional volser.

   and it will then issue the TSO RECEIVE command for the
   the following members to create these new data sets:

   Member       Dataset
   ASM          hlq.ASM
   CNTL         hlq.CNTL
   COB          hlq.COB
   C14MACLB     hlq.C14MACLB
   JCL          hlq.JCL
   LOADLIB      hlq.LOADLIB
   SRCE         hlq.SRCE
   TESTLIB      hlq.TESTLIB

   You will then need to copy these datasets/members into
   datasets for production use.

   After these data sets are created several of the members
   of this install data set will be browsed.
   */

  parse source x1 x2 x3 x4 dsn .

  if dsn = '?' then do
    say 'This exec must be executed via EX lib($install) EX, try again.'
    exit 8
  end

  x = PROMPT("ON") /* enable prompting */

  say "Enter desired hlq for target data sets",
    "(default is" sysvar("syspref")".PCRE2.NEW):"
  pull hlq
  hlq = strip(hlq)

  if hlq = "" then hlq = sysvar("syspref")".PCRE2.NEW"
  hlq = translate(hlq)

  say "Enter optional volser for target data sets",
    "default is to allow standard allocation to",
    "find a volume."
  pull volser
  volser = strip(volser)

  say "Enter optional SYSOUT class for RECEIVE messages," ,
    "a null SYSOUT class is recommended."
  pull sysout
  sysout = strip(sysout)
  if sysout <> "" then sys = "sysout("sysout")"
  else sys = ""

  if volser <> "" then vol = "vol("volser")"
  else vol = ""

  Say "Using HLQ:" hlq
  if vol <> "" then
  Say "Using Volser:" volser

/* ----------------------------------------------- *
 * Check for an ISPF environment and then check to *
 * see if the receive target datasets exist. If so *
 * then compress  them before the receive.         *
 * ----------------------------------------------- */
  if sysvar('sysispf') = "ACTIVE" then do
    Address ISPEXEC
    call do_comp   "'"hlq".ASM'"
    call do_comp   "'"hlq".CNTL'"
    call do_comp   "'"hlq".COB'"
    call do_comp   "'"hlq".C14MACLB'"
    call do_comp   "'"hlq".JCL'"
    call do_comp   "'"hlq".LOADLIB'"
    call do_comp   "'"hlq".SRCE'"
    call do_comp   "'"hlq".TESTLIB'"
    Address TSO
  end

/* ------------------------------------------------------------ *
 * Process the TSO RECEIVE command on all the pertinent members *
 * ------------------------------------------------------------ */
  queue "dsn('"hlq".asm')" vol sys
  "Receive inds('"dsn"(asm)')"
  queue "dsn('"hlq".CNTL')" vol sys
  "Receive inds('"dsn"(cntl)')"
  queue "dsn('"hlq".COB')" vol sys
  "Receive inds('"dsn"(cob)')"
  queue "dsn('"hlq".C14MACLB')" vol sys
  "Receive inds('"dsn"(c14maclb)')"
  queue "dsn('"hlq".JCL')" vol sys
  "Receive inds('"dsn"(jcl)')"
  queue "dsn('"hlq".LOADLIB')" vol sys
  "Receive inds('"dsn"(loadlib)')"
  queue "dsn('"hlq".SRCE')" vol sys
  "Receive inds('"dsn"(srce)')"
  queue "dsn('"hlq".TESTLIB')" vol sys
  "Receive inds('"dsn"(testlib)')"

/* -------------------------------------------- *
 * If ISPF is active show key members in Browse *
 * -------------------------------------------- */
  if sysvar('sysispf') <> "ACTIVE" then exit
  Address ISPEXEC
  "Browse dataset('"hlq".JCL(LICENCE)')"
  if rc > 0 then say zerrlm
/*"Browse dataset('"dsn"(REXXAPI)')"
  "Browse dataset('"dsn"($EBCDIC)')" */
  "Browse dataset('"hlq".JCL(REXXAPI)')"
  "Browse dataset('"hlq".JCL(PCRE2DOC)')"

/* ------------------------------------------------- *
 * Now display a list of the received datasets using *
 * ISPF LMM services (ISPF 3.4)                      *
 * ------------------------------------------------- */
  Address ISPExec
  if vol <> "" then lmvol = "VOLUME("vol")"
  else lmvol = ""
  "LMDINIT LISTID(LISTID) LEVEL("hlq")" lmvol
  "LMDDISP LISTID("ListId") Confirm(Yes)",
    "View(Volume)"
  "LMDFREE LISTID("ListId")"

  Exit

Do_Comp: procedure
  arg compdsn
  if sysdsn(compdsn) /= 'OK' then return
  say "Compressing:"  compdsn
  "LMInit dataid(compress) enq(exclu) dataset("compdsn")"
  "LMComp Dataid("compress")"
  "LMFree Dataid("compress")"
  return
